---
title: "Les API"
subtitle: |
  **[Atelier du `SSPHub` #1]{.orange}**
author:
  - name: "[Lino Galiana](https://www.linogaliana.fr/)"
    affiliations:
        - name: "Insee"
date: 2025-04-09
date-format: short
slide-number: true
footer: |
  **Les ateliers du `SSPHub`**
lang: fr-FR
slide-tone: true
format:
  onyxia-revealjs
from: markdown+emoji
image: https://minio.lab.sspcloud.fr/lgaliana/generative-art/pythonds/serveurpython.jpg
---


# Introduction

## Qu'est-ce qu'une API ?

<br>

::: {style="font-size: 70%"}

> [Une Application programming interface ou ¬´ interface de programmation d‚Äôapplication ¬ª) est une interface logicielle qui permet de ¬´ connecter ¬ª un logiciel ou un service √† un autre logiciel ou service afin d‚Äô√©changer des donn√©es et des fonctionnalit√©s.]{.smaller}
>
> [CNIL](https://www.cnil.fr/fr/definition/interface-de-programmation-dapplication-api)

:::


- D√©finition peu informative:
    - `Python`, `scikit-learn`, `Docker`, etc. sont des APIs
    - En pratique, on signifie g√©n√©ralement une [**API REST**]{.blue2}


## Les APIs REST

<br>

- [**API RESTful**]{.orange} : API conforme au style d'architecture [REST](https://fr.wikipedia.org/wiki/Representational_state_transfer)
    - Communication via le [**protocole HTTP**]{.blue2}

. . .

- En pratique :
    - On acc√®de √† un [**endpoint**]{.blue2} (ex : [l'API de la BAN](https://api-adresse.data.gouv.fr/search/))
    - Avec des [**requ√™tes HTTP**]{.blue2} (`GET`, `POST`, etc.) (ex : [rues contenant "com√©die"](https://api-adresse.data.gouv.fr/search/?q=com√©die&type=street))


## Analogie avec un restaurant {.smaller}

<br>

- üí¨ __[Vous passez commande]{.orange}__
    - Requ√™te avec param√®tres depuis {{< fa brands python >}}, {{< fa brands r-project >}}, votre navigateur...

. . .

- ‚ÜîÔ∏è __[Le serveur transmet la commande en cuisine]{.orange}__:
    - Point d'entr√©e de l'API

. . .

- üßë‚Äçüç≥ __[La cuisine pr√©pare le plat]{.orange}__
    - Le serveur (informatique) fait les traitements _ad hoc_

. . .

- üçï __[Vous recevez votre plat]{.orange}__
    - Vous recevez une r√©ponse au format `JSON`


## Pourquoi les API ?

- [_Praticit√©_]{.blue2} car permet de dissocier:
    - Le __[client]{.orange}__: une interface web ({{< fa brands firefox >}}) ou un langage informatique ({{< fa brands python >}}, {{< fa brands r-project >}}, {{< fa brands js-square >}}...)
    - Le __[serveur]{.orange}__: le moteur de calcul derri√®re

. . .

- [_Sobri√©t√©_]{.blue2}: permet l'acc√®s √† la donn√©e voulue sans parcourir tout un fichier

. . .

- [_Confidentialit√©_]{.blue2}: on peut mettre des droits d'acc√®s √† certaines donn√©es

. . .

- _[Unversalit√©]{.blue2}_: pas d'_a priori_ sur le mode d'acc√®s

## Les API de donn√©es

<br>

![](./images/serveur-modele-no-bg.png)


## Les API de donn√©es

- Plus de fichiers enregistr√©s manuellement
    + [__Mise √† jour assur√©e__]{.orange}  par le producteur
    + [__Directement propag√©es__]{.orange} au consommateur de donn√©es
    + Permet l'automatisation de scripts sans stockage local

. . .

- [__Contrat formel__]{.orange} avec un producteur de donn√©es
    + Contrairement au _webscraping_!

. . .

- Permet de r√©cup√©rer des [__donn√©es transform√©es complexes__]{.orange}
    - Exemple: inf√©rences de mod√®les ü§ñ


# Concepts principaux

## Structuration d'une requ√™te

Les requ√™tes prennent la forme d'__[URI]{.blue2}__:

::: {style="text-align: left !important;"}

$$
\quad \underbrace{\text{https://api-adresse.data.gouv.fr}}_{\text{API root}}/\underbrace{\text{search}}_{\text{API endpoint}}
$$


$$
\quad /?\underbrace{\text{q=88+avenue+verdier}}_{\text{main parameter}}\&\underbrace{\text{postcode=92120}}_{\text{additional parameter}}
$$


:::

Auxquelles vont s'ajouter des [**_headers_**]{.blue2} (explication √† venir)

::: {.callout-note}
[D√©monstration interactive](https://inseefrlab.github.io/ssphub-ateliers/sessions/api.html)
:::


## Les requ√™tes HTTP

* `GET`: r√©cup√©rer des donn√©es depuis un serveur web (lecture d'une base de donn√©es...)
* `POST`: envoyer des donn√©es au serveur (formulaires de mise √† jour de donn√©es, etc.)
* `Python` communique avec internet via le **_package_ `requests`** (`requests.get` et `requests.post`)


## Les codes HTTP

* Signification des codes HTTP
    * 1xx : Informations
    * 2xx : Succ√®s
    * 3xx : Redirections
    * 4xx : Erreurs c√¥t√© client
    * 5xx : Erreurs c√¥t√© serveur


::: {.callout-note}
## Codes √† retenir

Ceux √† retenir sont : [__200__]{.blue2} (succ√®s), [__400__]{.blue2} (requ√™te mal structur√©e), [__401__]{.blue2} (authentification nonr√©ussie), [__403__]{.blue2} (acc√®s interdit), [__404__]{.blue2} (ressource demand√©e n'existe pas), [__503__]{.blue2} (le serveur n'est pas en capacit√© de r√©pondre)

:::


## Les _swaggers_


:::: {.columns}

::: {.column width="56%"}

* Format standardis√© de documentation
    * G√©n√©ralement `${URL_ROOT}/docs`

* Utilisation interactive:
    * G√©n√®re des exemples `curl` (ligne de commande)

:::

::: {.column width="4%"}

:::

::: {.column width="36%"}

![](https://fastapi.tiangolo.com/img/index/index-03-swagger-02.png)

:::

::::

## Comment conna√Ætre les param√®tres d'une API ?

* _Swagger_ {{< iconify vscode-icons:file-type-swagger >}}

. . .

* Outils d√©veloppement navigateur (<kbd>CTRL</kbd>+<kbd>MAJ</kbd>+<kbd>K</kbd> sur {{< fa brands firefox >}}):
    * Onglet r√©seau {{< iconify uil:arrows-v >}}

. . .

* [`Postman`](https://www.postman.com/) {{< iconify vscode-icons:file-type-postman >}}

. . .

* Extension  {{< iconify vscode-icons:file-type-vscode >}} [REST Client](https://marketplace.visualstudio.com/items?itemName=humao.rest-client)



# Partie pratique

## Les requ√™tes [`GET`]{.blue2}
```{=html}
<a href="https://datalab.sspcloud.fr/launcher/ide/vscode-python?name=SSPHub-Atelier-API&version=2.2.7&s3=region-ec97c721&init.personalInit=¬´https%3A%2F%2Fraw.githubusercontent.com%2FInseeFrLab%2Fssphub-ateliers%2Frefs%2Fheads%2Fmain%2Finit%2Fapi.sh¬ª&networking.user.enabled=true&autoLaunch=true" target="_blank" rel="noopener" data-original-href="https://datalab.sspcloud.fr/launcher/ide/vscode-python?name=SSPHub-Atelier-API&version=2.2.7&s3=region-ec97c721&init.personalInit=¬´https%3A%2F%2Fraw.githubusercontent.com%2FInseeFrLab%2Fssphub-ateliers%2Frefs%2Fheads%2Fmain%2Finit%2Fapi.sh¬ª&networking.user.enabled=true&autoLaunch=true"><img src="https://custom-icon-badges.demolab.com/badge/SSP%20Cloud-Lancer_avec_VSCode-blue?logo=vsc&amp;logoColor=white" alt="Onyxia"></a>
<a href="https://inseefrlab.github.io/ssphub-ateliers/sessions/api.ipynb" target="_blank" rel="noopener" data-original-href="https://inseefrlab.github.io/ssphub-ateliers/sessions/api.ipynb"><img src="https://custom-icon-badges.demolab.com/badge/download--notebook-black.svg?logo=download-cloud&logoSource=feather" alt="Onyxia"></a><br>
```


* Requ√™te la plus commune

. . .

* Transformation en objet {{< fa brands python >}} (`JSON` -> `dict`) est naturelle

. . .

* Formattage d√©pend de chaque API (lire la doc ! üëÆ)

. . .

* Retravailler l'_output_ peut √™tre lourd


```{.python}
import requests
adresse = "88 avenue verdier"
url_ban_example = (
    f"https://api-adresse.data.gouv.fr/search/"
    f"?q={adresse.replace(" ", "+")}&postcode=92120"
)
requests.get(url_ban_example).json()
```



## Les requ√™tes `POST`
```{=html}
<a href="https://datalab.sspcloud.fr/launcher/ide/vscode-python?name=SSPHub-Atelier-API&version=2.2.7&s3=region-ec97c721&init.personalInit=¬´https%3A%2F%2Fraw.githubusercontent.com%2FInseeFrLab%2Fssphub-ateliers%2Frefs%2Fheads%2Fmain%2Finit%2Fapi.sh¬ª&networking.user.enabled=true&autoLaunch=true" target="_blank" rel="noopener" data-original-href="https://datalab.sspcloud.fr/launcher/ide/vscode-python?name=SSPHub-Atelier-API&version=2.2.7&s3=region-ec97c721&init.personalInit=¬´https%3A%2F%2Fraw.githubusercontent.com%2FInseeFrLab%2Fssphub-ateliers%2Frefs%2Fheads%2Fmain%2Finit%2Fapi.sh¬ª&networking.user.enabled=true&autoLaunch=true"><img src="https://custom-icon-badges.demolab.com/badge/SSP%20Cloud-Lancer_avec_VSCode-blue?logo=vsc&amp;logoColor=white" alt="Onyxia"></a>
<a href="https://inseefrlab.github.io/ssphub-ateliers/sessions/api.ipynb" target="_blank" rel="noopener" data-original-href="https://inseefrlab.github.io/ssphub-ateliers/sessions/api.ipynb"><img src="https://custom-icon-badges.demolab.com/badge/download--notebook-black.svg?logo=download-cloud&logoSource=feather" alt="Onyxia"></a><br>
```

* Envoyer des donn√©es utiles √† l'API

* Plus complexe mais `Requests` est flexible
    + Transformer les objets {{< fa brands python >}} en _input_ de l'API

```{.python}
params = {
    "columns": ["adresse", "Nom_commune"],
    "citycode": "DEPCOM",
    "result_columns": ["result_score", "latitude", "longitude"],
}

response = requests.post(
        "https://api-adresse.data.gouv.fr/search/csv/",
        data=params,
        files={"data": open(csv_file, "rb")},
    )
```


# Gestion des secrets

## Bonnes pratiques

[__La doctrine g√©n√©rale__]{.orange}

![](https://inseefrlab.github.io/formation-bonnes-pratiques-git-R/slides/img/environment_clean.png)

_Source: [Cours de l'ENSAE de mise en production](https://ensae-reproductibilite.github.io/)_

## Bonnes pratiques pour les secrets
```{=html}
<a href="https://datalab.sspcloud.fr/launcher/ide/vscode-python?name=SSPHub-Atelier-API&version=2.2.7&s3=region-ec97c721&init.personalInit=¬´https%3A%2F%2Fraw.githubusercontent.com%2FInseeFrLab%2Fssphub-ateliers%2Frefs%2Fheads%2Fmain%2Finit%2Fapi.sh¬ª&networking.user.enabled=true&autoLaunch=true" target="_blank" rel="noopener" data-original-href="https://datalab.sspcloud.fr/launcher/ide/vscode-python?name=SSPHub-Atelier-API&version=2.2.7&s3=region-ec97c721&init.personalInit=¬´https%3A%2F%2Fraw.githubusercontent.com%2FInseeFrLab%2Fssphub-ateliers%2Frefs%2Fheads%2Fmain%2Finit%2Fapi.sh¬ª&networking.user.enabled=true&autoLaunch=true"><img src="https://custom-icon-badges.demolab.com/badge/SSP%20Cloud-Lancer_avec_VSCode-blue?logo=vsc&amp;logoColor=white" alt="Onyxia"></a>
<a href="https://inseefrlab.github.io/ssphub-ateliers/sessions/api.ipynb" target="_blank" rel="noopener" data-original-href="https://inseefrlab.github.io/ssphub-ateliers/sessions/api.ipynb"><img src="https://custom-icon-badges.demolab.com/badge/download--notebook-black.svg?logo=download-cloud&logoSource=feather" alt="Onyxia"></a><br>
```



1. __[Boite de dialogue]{.orange}__ via [`getpass`](https://docs.python.org/3/library/getpass.html) (application interactive uniquement)

. . .

2. __[Variables d'environnement]{.orange}__:
    * Dans un [fichier `.env`]{.blue2} (non committ√©!) lu avec [`dotenv`](https://pypi.org/project/python-dotenv/)
    * Dans les [secrets]{.blue2} de l'int√©gration continue (cf. [doc {{< fa brands github >}}](https://docs.github.com/en/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions))

```{.python}
from dotenv import load_dotenv
load_dotenv()
token = os.getenv("MON_PETIT_JETON")
```


## Conclusion

* [__Pratique__]{.orange} pour r√©cup√©rer des __[donn√©es ponctuelles]{.orange}__:
    * Afficher un __[nombre limit√© d'enregistrements]{.blue2}__ dans une application
    * R√©cup√©rer des donn√©es issues d'un [__processus de transformation complexe__]{.blue2}

. . .

* __[Limit√©es]{.orange}__ en termes de [__volum√©trie__]{.blue2} ou __[stabilit√© d'acc√®s]{.blue2}__

. . .

* __[Code tr√®s adh√©rant]{.orange}__ √† une API et un langage client


## Des questions ?

![](https://minio.lab.sspcloud.fr/lgaliana/generative-art/pythonds/kid.png)

